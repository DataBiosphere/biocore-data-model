{
  "name": "AnVILSubmissionDataFindabilitySubsetSchema",
  "description": "AnVIL Submission Data Findability, following the BioCore data model and distributed as LinkML/yaml, JSON-schema, TDR JSON, and excel templates.",
  "id": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
  "imports": [
    "linkml:types"
  ],
  "license": "https://creativecommons.org/publicdomain/zero/1.0/",
  "prefixes": [
    {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    {
      "prefix_prefix": "AnVIL",
      "prefix_reference": "https://AnVILproject.org/"
    },
    {
      "prefix_prefix": "hpo",
      "prefix_reference": "https://hpo.jax.org/app/browse/term/"
    },
    {
      "prefix_prefix": "PATO",
      "prefix_reference": "https://www.ebi.ac.uk/ols4/ontologies/pato/"
    },
    {
      "prefix_prefix": "CL",
      "prefix_reference": "http://purl.obolibrary.org/obo/CL_"
    },
    {
      "prefix_prefix": "MONDO",
      "prefix_reference": "http://purl.obolibrary.org/obo/MONDO_"
    },
    {
      "prefix_prefix": "UBERON",
      "prefix_reference": "http://purl.obolibrary.org/obo/UBERON_"
    }
  ],
  "default_prefix": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/",
  "default_range": "string",
  "types": [
    {
      "name": "string",
      "definition_uri": "https://w3id.org/linkml/String",
      "description": "A character string",
      "notes": [
        "In RDF serializations, a slot with range of string is treated as a literal or type xsd:string.   If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"string\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "@type": "TypeDefinition"
    },
    {
      "name": "integer",
      "definition_uri": "https://w3id.org/linkml/Integer",
      "description": "An integer",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"integer\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "http://www.w3.org/2001/XMLSchema#integer",
      "@type": "TypeDefinition"
    },
    {
      "name": "boolean",
      "definition_uri": "https://w3id.org/linkml/Boolean",
      "description": "A binary (true or false) value",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"boolean\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "http://www.w3.org/2001/XMLSchema#boolean",
      "repr": "bool",
      "@type": "TypeDefinition"
    },
    {
      "name": "float",
      "definition_uri": "https://w3id.org/linkml/Float",
      "description": "A real number that conforms to the xsd:float specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"float\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#float",
      "@type": "TypeDefinition"
    },
    {
      "name": "double",
      "definition_uri": "https://w3id.org/linkml/Double",
      "description": "A real number that conforms to the xsd:double specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"double\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#double",
      "@type": "TypeDefinition"
    },
    {
      "name": "decimal",
      "definition_uri": "https://w3id.org/linkml/Decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"decimal\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "http://www.w3.org/2001/XMLSchema#decimal",
      "@type": "TypeDefinition"
    },
    {
      "name": "time",
      "definition_uri": "https://w3id.org/linkml/Time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"time\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "http://www.w3.org/2001/XMLSchema#time",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "date",
      "definition_uri": "https://w3id.org/linkml/Date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "http://www.w3.org/2001/XMLSchema#date",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "datetime",
      "definition_uri": "https://w3id.org/linkml/Datetime",
      "description": "The combination of a date and time",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"datetime\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "date_or_datetime",
      "definition_uri": "https://w3id.org/linkml/DateOrDatetime",
      "description": "Either a date or a datetime",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date_or_datetime\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "https://w3id.org/linkml/DateOrDatetime",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "uriorcurie",
      "definition_uri": "https://w3id.org/linkml/Uriorcurie",
      "description": "a URI or a CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uriorcurie\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "URIorCURIE",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "curie",
      "definition_uri": "https://w3id.org/linkml/Curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"curie\"."
      ],
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "Curie",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "uri",
      "definition_uri": "https://w3id.org/linkml/Uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uri\"."
      ],
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "ncname",
      "definition_uri": "https://w3id.org/linkml/Ncname",
      "description": "Prefix part of CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"ncname\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NCName",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "objectidentifier",
      "definition_uri": "https://w3id.org/linkml/Objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"objectidentifier\"."
      ],
      "comments": [
        "Used for inheritance and type checking"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "ElementIdentifier",
      "uri": "http://www.w3.org/ns/shex#iri",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "nodeidentifier",
      "definition_uri": "https://w3id.org/linkml/Nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"nodeidentifier\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NodeIdentifier",
      "uri": "http://www.w3.org/ns/shex#nonLiteral",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "jsonpointer",
      "definition_uri": "https://w3id.org/linkml/Jsonpointer",
      "conforms_to": "https://datatracker.ietf.org/doc/html/rfc6901",
      "description": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpointer\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "jsonpath",
      "definition_uri": "https://w3id.org/linkml/Jsonpath",
      "conforms_to": "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html",
      "description": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpath\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "sparqlpath",
      "definition_uri": "https://w3id.org/linkml/Sparqlpath",
      "conforms_to": "https://www.w3.org/TR/sparql11-query/#propertypaths",
      "description": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"sparqlpath\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    }
  ],
  "enums": [
    {
      "name": "ActivityTypes",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/ActivityTypes",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "permissible_values": [
        {
          "text": "SampleCollectionActivity"
        },
        {
          "text": "SampleTreatmentActivity"
        },
        {
          "text": "SequenceActivity"
        },
        {
          "text": "AlignmentActivity"
        },
        {
          "text": "VariantCallActivity"
        },
        {
          "text": "ExpressionActivity"
        },
        {
          "text": "AnalysisActivity"
        },
        {
          "text": "ImageActivity"
        },
        {
          "text": "IndexActivity"
        },
        {
          "text": "ChecksumActivity"
        },
        {
          "text": "Activity"
        }
      ]
    },
    {
      "name": "PhenotypicSexValues",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/PhenotypicSexValues",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "permissible_values": [
        {
          "text": "female",
          "meaning": "PATO:0000383"
        },
        {
          "text": "male",
          "meaning": "PATO:0000384"
        },
        {
          "text": "intersex",
          "description": "between male and female sex"
        },
        {
          "text": "prefer not to say",
          "description": "the individual prefers not to disclose"
        }
      ]
    },
    {
      "name": "DonorTypeValues",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/DonorTypeValues",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "permissible_values": [
        {
          "text": "patient"
        },
        {
          "text": "cell line"
        }
      ]
    },
    {
      "name": "DataModalityValues",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/DataModalityValues",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "permissible_values": [
        {
          "text": "epigenomic"
        },
        {
          "text": "3D contact maps"
        },
        {
          "text": "DNA binding"
        },
        {
          "text": "histone modification location"
        },
        {
          "text": "transcription factor location"
        },
        {
          "text": "DNA chromatin accessibility"
        },
        {
          "text": "DNA methylation"
        },
        {
          "text": "RNA binding"
        },
        {
          "text": "genomic"
        },
        {
          "text": "assembly"
        },
        {
          "text": "exome"
        },
        {
          "text": "genotyping"
        },
        {
          "text": "whole genome"
        },
        {
          "text": "imaging"
        },
        {
          "text": "electrophysiology"
        },
        {
          "text": "medical imaging"
        },
        {
          "text": "CT scan"
        },
        {
          "text": "electrocardiogram"
        },
        {
          "text": "MRI"
        },
        {
          "text": "X ray"
        },
        {
          "text": "microscopy"
        },
        {
          "text": "metabolomic"
        },
        {
          "text": "microbiome"
        },
        {
          "text": "proteomic"
        },
        {
          "text": "transcriptomic"
        },
        {
          "text": "spatial transcriptomics"
        },
        {
          "text": "transcriptomic nontargeted"
        },
        {
          "text": "transcriptomic targeted"
        }
      ]
    },
    {
      "name": "BioSampleTypeValues",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/BioSampleTypeValues",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "permissible_values": [
        {
          "text": "cell line"
        },
        {
          "text": "primary culture"
        },
        {
          "text": "T cell"
        },
        {
          "text": "platelet"
        },
        {
          "text": "B cell"
        },
        {
          "text": "lymphocyte"
        },
        {
          "text": "monocyte"
        },
        {
          "text": "amniotic fluid"
        },
        {
          "text": "blood"
        },
        {
          "text": "urine"
        },
        {
          "text": "synovial fluid"
        },
        {
          "text": "cerebrospinal fluid"
        },
        {
          "text": "saliva"
        },
        {
          "text": "semen"
        },
        {
          "text": "plasma"
        },
        {
          "text": "serum"
        },
        {
          "text": "stool"
        },
        {
          "text": "vaginal fluid"
        },
        {
          "text": "body fluid"
        },
        {
          "text": "breast milk"
        },
        {
          "text": "buffy coat"
        },
        {
          "text": "cell free DNA"
        },
        {
          "text": "derived type"
        },
        {
          "text": "erythrocyte"
        },
        {
          "text": "induced pluripotent stem cells"
        },
        {
          "text": "in vitro differentiated cells"
        },
        {
          "text": "leukocyte"
        },
        {
          "text": "organoid"
        },
        {
          "text": "peripheral blood mononuclear cell"
        },
        {
          "text": "primary cell"
        },
        {
          "text": "primary type"
        },
        {
          "text": "tissue"
        }
      ]
    },
    {
      "name": "APrioriCellTypeValues",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/APrioriCellTypeValues",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "reachable_from": {
        "source_ontology": "obo:cl",
        "source_nodes": [
          "CL:0000000"
        ],
        "relationship_types": [
          "rdfs:subClassOf"
        ]
      }
    },
    {
      "name": "MonarchDiseaseOntology",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/MonarchDiseaseOntology",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "minus": [
        {
          "permissible_values": [
            {
              "text": "root_node",
              "meaning": "MONDO:0000001"
            }
          ]
        }
      ],
      "reachable_from": {
        "source_ontology": "bioregistry:mondo",
        "source_nodes": [
          "MONDO:0000001"
        ],
        "relationship_types": [
          "rdfs:subClassOf"
        ]
      }
    },
    {
      "name": "HumanPhenotypeOntology",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/HumanPhenotypeOntology",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "reachable_from": {
        "source_ontology": "hpo",
        "source_nodes": [
          "HP:0000001"
        ],
        "relationship_types": [
          "rdfs:subClassOf"
        ]
      }
    },
    {
      "name": "SNOMEDCT",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/SNOMEDCT",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "reachable_from": {
        "source_ontology": "bioregistry:snomedct",
        "source_nodes": [
          "SNOMEDCT:404684003"
        ],
        "relationship_types": [
          "rdfs:subClassOf"
        ]
      }
    }
  ],
  "slots": [
    {
      "name": "donor_id_fk",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_id_fk",
      "description": "This property references the Donor organism from which the BioSample was acquired.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasDonor"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_id_fk",
      "owner": "Condition",
      "domain_of": [
        "BioSample",
        "Condition"
      ],
      "range": "Donor",
      "multivalued": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "biosample_id_fk",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_id_fk",
      "description": "The BioSample ID representing the biosample that was used to generate the file.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasBioSample"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_id_fk",
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "BioSample",
      "@type": "SlotDefinition"
    },
    {
      "name": "used_file_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/used_file_id",
      "description": "Associated file ID that links to the record in the file table representing the file used in this activity.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "domain": "Activity",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/used_file_id",
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "File",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "generated_file_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/generated_file_id",
      "description": "Associated file ID that links to the record in the file table representing the file generated by this activity.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "domain": "Activity",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/generated_file_id",
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "File",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "used_biosample_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/used_biosample_id",
      "description": "A reference to the sample used by this activity.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "domain": "Activity",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/used_biosample_id",
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "BioSample",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "generated_biosample_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/generated_biosample_id",
      "description": "A reference to the sample generated by this activity.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "domain": "Activity",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/generated_biosample_id",
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "BioSample",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "biosample_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_id",
      "description": "A unique identifier for the biosample.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_id",
      "identifier": true,
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "donor_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_id",
      "description": "A unique identifier for the donor.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_id",
      "identifier": true,
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "file_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_id",
      "description": "A unique identifier for the file.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_id",
      "identifier": true,
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "string",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "condition_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition_id",
      "description": "A unique identifier for the documented condition - internal identifier.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition_id",
      "identifier": true,
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "string",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "activity_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_id",
      "description": "A unique identifier for the activity.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_id",
      "identifier": true,
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "string",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "project_id",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/project_id",
      "description": "A unique identifier for the project.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/project_id",
      "identifier": true,
      "owner": "Project",
      "domain_of": [
        "Project"
      ],
      "range": "string",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "activity_type",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_type",
      "description": "A human-readable reference to the type of activity, preferably using an identifier in a recommended standard ontology.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_type",
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "activity_type_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_type_code",
      "description": "Code associated with the activity type concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_type_code",
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "activity_type_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_type_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/activity_type_coding_system",
      "owner": "Activity",
      "domain_of": [
        "Activity"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "anatomical_site",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/anatomical_site",
      "description": "A human-readable reference to the site within the organism from which the biosample was taken.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasAnatomicalSite"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/anatomical_site",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "anatomical_site_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/anatomical_site_code",
      "description": "Code associated with the anatomical site concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/anatomical_site_code",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "anatomical_site_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/anatomical_site_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/anatomical_site_coding_system",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "apriori_cell_type",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/apriori_cell_type",
      "description": "A human-readable reference to the a priori cell type(s) for the sample, a human assignment of cell type without experimental data.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasAprioriCellType"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/apriori_cell_type",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "apriori_cell_type_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/apriori_cell_type_code",
      "description": "Code associated with the a priori cell type concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/apriori_cell_type_code",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "APrioriCellTypeValues",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "apriori_cell_type_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/apriori_cell_type_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/apriori_cell_type_coding_system",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "biosample_type",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_type",
      "description": "A human-readable reference to the type of biosample represented by the record.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_type",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "BioSampleTypeValues",
      "@type": "SlotDefinition"
    },
    {
      "name": "biosample_type_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_type_code",
      "description": "Code associated with the biosample type concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_type_code",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "biosample_type_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_type_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/biosample_type_coding_system",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "condition",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition",
      "description": "A human-readable property that describes a disease, condition, or phenotype that has been reported in this entity in a human readable manner (as opposed to a code/id/etc). If multiple values exist, they must be synonymous.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "condition_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition_code",
      "description": "Code associated with the condition concept in a coding system; system and label are specified in a separate field. If multiple values exist, they must be synonymous.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition_code",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "uriorcurie",
      "any_of": [
        {
          "range": "MonarchDiseaseOntology",
          "@type": "AnonymousSlotExpression"
        },
        {
          "range": "HumanPhenotypeOntology",
          "@type": "AnonymousSlotExpression"
        },
        {
          "range": "SNOMEDCT",
          "@type": "AnonymousSlotExpression"
        }
      ],
      "@type": "SlotDefinition"
    },
    {
      "name": "condition_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/condition_coding_system",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "donor_age_at_collection_unit",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_age_at_collection_unit",
      "description": "The units (e.g. years or days) of the Age of the Donor at the point in time that the BioSample was obtained or other representative entity (test, diagnosis, treatment...) was created.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_age_at_collection_unit",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "donor_age_at_collection_lower_bound",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_age_at_collection_lower_bound",
      "description": "Lower bound for age of donor at time sample was taken. If any age at collection data is present, must specify a unit as well.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_age_at_collection_lower_bound",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "float",
      "@type": "SlotDefinition"
    },
    {
      "name": "donor_age_at_collection_upper_bound",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_age_at_collection_upper_bound",
      "description": "Upper bound for age of donor at time sample was taken. If any age at collection data is present, must specify a unit as well.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_age_at_collection_upper_bound",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "float",
      "@type": "SlotDefinition"
    },
    {
      "name": "donor_is_affected",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_is_affected",
      "description": "A Boolean value representing whether a subject is affected by a documented condition or not. Allows documentation of pertinent negatives. If empty, defaults to true.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_is_affected",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "donor_type",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_type",
      "description": "Type of donor represented by the record. If blank, the data will be treated as Patient by default.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/donor_type",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "DonorTypeValues",
      "@type": "SlotDefinition"
    },
    {
      "name": "funded_by",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/funded_by",
      "description": "A relationship defining the funding source.  The range is expected to include grants, organizations, or a string indicating the funding source.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/funded_by",
      "owner": "Project",
      "domain_of": [
        "Project"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "observation_age_unit",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/observation_age_unit",
      "description": "A reference to the unit of time used to represent age.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/observation_age_unit",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "observation_age_lower_bound",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/observation_age_lower_bound",
      "description": "Earliest age a patient was diagnosed or identified as having a condition/phenotype. If providing an exact age, lower and upper bounds should be the same value.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/observation_age_lower_bound",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "float",
      "@type": "SlotDefinition"
    },
    {
      "name": "observation_age_upper_bound",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/observation_age_upper_bound",
      "description": "Latest age a patient was diagnosed or identified as having a condition/phenotype. If providing an exact age, lower and upper bounds should be the same value.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/observation_age_upper_bound",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "float",
      "@type": "SlotDefinition"
    },
    {
      "name": "onset_age_unit",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/onset_age_unit",
      "description": "A reference to the unit of time used to represent age.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/onset_age_unit",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "onset_age_lower_bound",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/onset_age_lower_bound",
      "description": "Earliest age for condition onset. If providing an exact age, lower and upper bounds should be the same value.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/onset_age_lower_bound",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "float",
      "@type": "SlotDefinition"
    },
    {
      "name": "onset_age_upper_bound",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/onset_age_upper_bound",
      "description": "Latest age for condition onset. If providing an exact age, lower and upper bounds should be the same value.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/onset_age_upper_bound",
      "owner": "Condition",
      "domain_of": [
        "Condition"
      ],
      "range": "float",
      "@type": "SlotDefinition"
    },
    {
      "name": "organism_type",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/organism_type",
      "description": "A human-readable reference to the organism type.",
      "comments": [
        "For example: Homo sapiens from NCBITaxon or http://purl.obolibrary.org/obo/NCBITaxon_9606 "
      ],
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasOrganismType"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/organism_type",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "organism_type_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/organism_type_code",
      "description": "Code associated with the organism type concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/organism_type_code",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "organism_type_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/organism_type_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/organism_type_coding_system",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "phenotypic_sex",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/phenotypic_sex",
      "description": "A reference to the BiologicalSex of the Donor organism. \\\"An organismal quality inhering in a bearer by virtue of the bearer's physical expression of sexual characteristics. [PATO_0001894]\\",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasPhenotypicSex"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/phenotypic_sex",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "PhenotypicSexValues",
      "@type": "SlotDefinition"
    },
    {
      "name": "phenotypic_sex_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/phenotypic_sex_code",
      "description": "Code associated with the biological sex concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/phenotypic_sex_code",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "phenotypic_sex_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/phenotypic_sex_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/phenotypic_sex_coding_system",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "principal_investigator",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/principal_investigator",
      "description": "A relationship defining the principal investigator.  The range is expected to include a person or a string indicating the principal investigator.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/principal_investigator",
      "owner": "Project",
      "domain_of": [
        "Project"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "primary_condition",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/primary_condition",
      "description": "A human-readable property that identifies a disease or condition has been reported in this entity.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasDisease"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/primary_condition",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "primary_condition_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/primary_condition_code",
      "description": "Code associated with the disease concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/primary_condition_code",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "primary_condition_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/primary_condition_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/primary_condition_coding_system",
      "owner": "BioSample",
      "domain_of": [
        "BioSample"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "registered_identifier",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/registered_identifier",
      "description": "Registered identifier for the project, such as the dbGaP PHS ID.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/registered_identifier",
      "owner": "Project",
      "domain_of": [
        "Project"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "reported_ethnicity",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reported_ethnicity",
      "description": "A property that relects a Human Donor's reported ethnic origins. Note this may contain both Race and Ethnicity information as define by the US Department of Interior (DOI) https://www.doi.gov/pmb/eeo/directives/race-data",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasReportedEthnicity"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reported_ethnicity",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "reported_ethnicity_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reported_ethnicity_code",
      "description": "Code associated with the reported ethnicity concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reported_ethnicity_code",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "reported_ethnicity_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reported_ethnicity_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reported_ethnicity_coding_system",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "title",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/title",
      "description": "Easily understood title for project.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/title",
      "owner": "Project",
      "domain_of": [
        "Project"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "genetic_ancestry",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/genetic_ancestry",
      "description": "A human-readable property that reflects a donor's reported major contributing ancestral origins based on genetic/genomic data.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasGeneticAncestry"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/genetic_ancestry",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "genetic_acestry_code",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/genetic_acestry_code",
      "description": "Code associated with the genetic ancestry concept in a coding system; system and label are specified in a separate field.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/genetic_acestry_code",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "genetic_ancestry_coding_system",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/genetic_ancestry_coding_system",
      "description": "Reference (URL, etc) to the system that the code and title came from.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/genetic_ancestry_coding_system",
      "owner": "Donor",
      "domain_of": [
        "Donor"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "data_modality",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/data_modality",
      "description": "Data modality describes the biological nature of the information gathered as the result of an Activity, independent of the technology or methods used to produce the information.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasDataModality"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/data_modality",
      "owner": "Activity",
      "domain_of": [
        "File",
        "Activity"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "file_name",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_name",
      "description": "The name of the file.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_name",
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "file_ref",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_ref",
      "description": "The fully qualified path to the file.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_ref",
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "file_format",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_format",
      "description": "An indication of the format of an electronic file; include the full file extension including compression extensions. Usually aligns with file extension (e.g. bam, sam, text, csv, etc.)",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasFileFormat"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_format",
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "file_size",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_size",
      "description": "Size of file in megabytes.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasFileSize"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_size",
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "integer",
      "@type": "SlotDefinition"
    },
    {
      "name": "file_md5sum",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_md5sum",
      "description": "md5 checksum for the file",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/file_md5sum",
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "string",
      "@type": "SlotDefinition"
    },
    {
      "name": "reference_assembly",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reference_assembly",
      "description": "A reference to the collection of sequences taken as the standard for a given organism. May be defined by https://www.ncbi.nlm.nih.gov/grc.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "usesReferenceAssembly"
      ],
      "slot_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/reference_assembly",
      "owner": "File",
      "domain_of": [
        "File"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "age_at_death",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/age_at_death",
      "description": "A reference to the Age of the Donor at time of death. The units are assumed to be years.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "aliases": [
        "hasAgeAtDeath"
      ],
      "mappings": [
        "https://datamodel.terra.bio/TerraCore#hasAgeAtDeath"
      ],
      "slot_uri": "https://datamodel.terra.bio/TerraCore#hasAgeAtDeath",
      "range": "decimal",
      "@type": "SlotDefinition"
    }
  ],
  "classes": [
    {
      "name": "BioSample",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/BioSample",
      "description": "Contains information about the sample(s) included in the study.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slots": [
        "biosample_id",
        "anatomical_site",
        "anatomical_site_code",
        "anatomical_site_coding_system",
        "apriori_cell_type",
        "apriori_cell_type_code",
        "apriori_cell_type_coding_system",
        "biosample_type",
        "biosample_type_code",
        "biosample_type_coding_system",
        "primary_condition",
        "primary_condition_code",
        "primary_condition_coding_system",
        "donor_age_at_collection_unit",
        "donor_age_at_collection_lower_bound",
        "donor_age_at_collection_upper_bound",
        "donor_id_fk"
      ],
      "slot_usage": {},
      "class_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/BioSample",
      "@type": "ClassDefinition"
    },
    {
      "name": "Donor",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Donor",
      "description": "Demographic and phenotypic information about the donor.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slots": [
        "donor_id",
        "donor_type",
        "organism_type",
        "organism_type_code",
        "organism_type_coding_system",
        "phenotypic_sex",
        "phenotypic_sex_code",
        "phenotypic_sex_coding_system",
        "reported_ethnicity",
        "reported_ethnicity_code",
        "reported_ethnicity_coding_system",
        "genetic_ancestry",
        "genetic_acestry_code",
        "genetic_ancestry_coding_system"
      ],
      "slot_usage": {},
      "class_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Donor",
      "@type": "ClassDefinition"
    },
    {
      "name": "File",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/File",
      "description": "Information for files associated with the study.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slots": [
        "file_id",
        "data_modality",
        "file_format",
        "file_size",
        "file_md5sum",
        "file_name",
        "file_ref",
        "reference_assembly",
        "biosample_id_fk"
      ],
      "slot_usage": {},
      "class_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/File",
      "@type": "ClassDefinition"
    },
    {
      "name": "Condition",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Condition",
      "description": "Contains information about the condition(s) of the donor.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slots": [
        "condition_id",
        "condition",
        "condition_code",
        "condition_coding_system",
        "donor_is_affected",
        "donor_id_fk",
        "observation_age_unit",
        "observation_age_lower_bound",
        "observation_age_upper_bound",
        "onset_age_unit",
        "onset_age_lower_bound",
        "onset_age_upper_bound"
      ],
      "slot_usage": {},
      "class_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Condition",
      "@type": "ClassDefinition"
    },
    {
      "name": "Activity",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Activity",
      "description": "Contains information about the activity that was performed.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slots": [
        "activity_id",
        "activity_type",
        "activity_type_code",
        "activity_type_coding_system",
        "used_file_id",
        "generated_file_id",
        "used_biosample_id",
        "generated_biosample_id",
        "data_modality"
      ],
      "slot_usage": {},
      "class_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Activity",
      "@type": "ClassDefinition"
    },
    {
      "name": "Project",
      "definition_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Project",
      "description": "Contains information about the project.",
      "from_schema": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content",
      "slots": [
        "project_id",
        "title",
        "funded_by",
        "registered_identifier",
        "principal_investigator"
      ],
      "slot_usage": {},
      "class_uri": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/Project",
      "@type": "ClassDefinition"
    }
  ],
  "metamodel_version": "1.7.0",
  "source_file": "AnVILSubmissionDataFindabilitySubsetSchema.linkml.yaml",
  "source_file_date": "2024-09-07T08:02:13",
  "source_file_size": 19349,
  "generation_date": "2024-09-07T08:02:24",
  "@type": "SchemaDefinition",
  "@context": [
    "https://w3id.org/linkml/types.context.jsonld",
    {
      "@base": "https://github.com/DataBiosphere/biocore-data-model/tree/main/content/"
    }
  ]
}

